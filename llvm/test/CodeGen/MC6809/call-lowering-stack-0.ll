; NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
; RUN: llc -O0 -stop-after=irtranslator -global-isel -global-isel-abort=1 -verify-machineinstrs %s -o - | FileCheck %s --check-prefixes=CHECK-MC6809
; RUN: llc -mcpu hd6309 -O0 -stop-after=irtranslator -global-isel -global-isel-abort=1 -verify-machineinstrs %s -o - | FileCheck %s --check-prefixes=CHECK-HD6309
target triple = "mc6809"

define i8 @args_i8(i8 %x0, i8 %x1, i8 %x2, i8 %x3, i8 %x4) {
  ; CHECK-MC6809-LABEL: name: args_i8
  ; CHECK-MC6809: bb.1 (%ir-block.0):
  ; CHECK-MC6809-NEXT:   liveins: $aa, $ab
  ; CHECK-MC6809-NEXT: {{  $}}
  ; CHECK-MC6809-NEXT:   [[COPY:%[0-9]+]]:_(s8) = COPY $ab
  ; CHECK-MC6809-NEXT:   [[COPY1:%[0-9]+]]:_(s8) = COPY $aa
  ; CHECK-MC6809-NEXT:   [[FRAME_INDEX:%[0-9]+]]:_(p0) = G_FRAME_INDEX %fixed-stack.2
  ; CHECK-MC6809-NEXT:   [[LOAD:%[0-9]+]]:_(s8) = G_LOAD [[FRAME_INDEX]](p0) :: (invariant load (s8) from %fixed-stack.2, align 2)
  ; CHECK-MC6809-NEXT:   [[FRAME_INDEX1:%[0-9]+]]:_(p0) = G_FRAME_INDEX %fixed-stack.1
  ; CHECK-MC6809-NEXT:   [[LOAD1:%[0-9]+]]:_(s8) = G_LOAD [[FRAME_INDEX1]](p0) :: (invariant load (s8) from %fixed-stack.1)
  ; CHECK-MC6809-NEXT:   [[FRAME_INDEX2:%[0-9]+]]:_(p0) = G_FRAME_INDEX %fixed-stack.0
  ; CHECK-MC6809-NEXT:   [[LOAD2:%[0-9]+]]:_(s8) = G_LOAD [[FRAME_INDEX2]](p0) :: (invariant load (s8) from %fixed-stack.0, align 2)
  ; CHECK-MC6809-NEXT:   $ab = COPY [[LOAD2]](s8)
  ; CHECK-MC6809-NEXT:   ReturnImplicit implicit $ab
  ; CHECK-HD6309-LABEL: name: args_i8
  ; CHECK-HD6309: bb.1 (%ir-block.0):
  ; CHECK-HD6309-NEXT:   liveins: $aa, $ab, $ae, $af
  ; CHECK-HD6309-NEXT: {{  $}}
  ; CHECK-HD6309-NEXT:   [[COPY:%[0-9]+]]:_(s8) = COPY $ab
  ; CHECK-HD6309-NEXT:   [[COPY1:%[0-9]+]]:_(s8) = COPY $aa
  ; CHECK-HD6309-NEXT:   [[COPY2:%[0-9]+]]:_(s8) = COPY $af
  ; CHECK-HD6309-NEXT:   [[COPY3:%[0-9]+]]:_(s8) = COPY $ae
  ; CHECK-HD6309-NEXT:   [[FRAME_INDEX:%[0-9]+]]:_(p0) = G_FRAME_INDEX %fixed-stack.0
  ; CHECK-HD6309-NEXT:   [[LOAD:%[0-9]+]]:_(s8) = G_LOAD [[FRAME_INDEX]](p0) :: (invariant load (s8) from %fixed-stack.0, align 2)
  ; CHECK-HD6309-NEXT:   $ab = COPY [[LOAD]](s8)
  ; CHECK-HD6309-NEXT:   ReturnImplicit implicit $ab
  ret i8 %x4
}
