; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -O0 -global-isel -global-isel-abort=1 -verify-machineinstrs %s -o - | FileCheck %s --check-prefixes=CHECK-MC6809
; RUN: llc -O0 -global-isel -global-isel-abort=1 -verify-machineinstrs -mcpu hd6309 %s -o - | FileCheck %s --check-prefixes=CHECK-HD6309
target triple = "mc6809"

define i8 @foo0(i8* nocapture noundef readonly %a, i8 noundef zeroext %b) #0 {
; CHECK-MC6809-LABEL: foo0:
; CHECK-MC6809:       ; %bb.0: ; %entry
; CHECK-MC6809-NEXT:    ldb b,x
; CHECK-MC6809-NEXT:    rts
;
; CHECK-HD6309-LABEL: foo0:
; CHECK-HD6309:       ; %bb.0: ; %entry
; CHECK-HD6309-NEXT:    ldb b,x
; CHECK-HD6309-NEXT:    rts
entry:
  %idxprom = zext i8 %b to i16
  %arrayidx = getelementptr inbounds i8, i8* %a, i16 %idxprom
  %0 = load i8, i8* %arrayidx, align 1
  ret i8 %0
}

define i8 @foo1(i8* nocapture noundef readonly %a, i8 noundef signext %b) #0 {
; CHECK-MC6809-LABEL: foo1:
; CHECK-MC6809:       ; %bb.0: ; %entry
; CHECK-MC6809-NEXT:    ldb b,x
; CHECK-MC6809-NEXT:    rts
;
; CHECK-HD6309-LABEL: foo1:
; CHECK-HD6309:       ; %bb.0: ; %entry
; CHECK-HD6309-NEXT:    ldb b,x
; CHECK-HD6309-NEXT:    rts
entry:
  %idxprom = sext i8 %b to i16
  %arrayidx = getelementptr inbounds i8, i8* %a, i16 %idxprom
  %0 = load i8, i8* %arrayidx, align 1
  ret i8 %0
}

define i8 @foo2(i8* nocapture noundef readonly %a) #0 {
; CHECK-MC6809-LABEL: foo2:
; CHECK-MC6809:       ; %bb.0: ; %entry
; CHECK-MC6809-NEXT:    ldb -5,x
; CHECK-MC6809-NEXT:    rts
;
; CHECK-HD6309-LABEL: foo2:
; CHECK-HD6309:       ; %bb.0: ; %entry
; CHECK-HD6309-NEXT:    ldb -5,x
; CHECK-HD6309-NEXT:    rts
entry:
  %arrayidx = getelementptr inbounds i8, i8* %a, i16 -5
  %0 = load i8, i8* %arrayidx, align 1
  ret i8 %0
}
